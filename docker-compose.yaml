version: "3"
services:
  user:
    container_name: pv217_user
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: user-service
    ports:
      - "8081:8081"
    environment:
      quarkus.datasource.jdbc.url: jdbc:postgresql://postgres:5432/d
    depends_on:
      - postgres

  course:
    container_name: pv217_course
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: course-service
    ports:
      - "8082:8082"
    environment:
      quarkus.datasource.jdbc.url: jdbc:postgresql://postgres:5432/d
      pv217.userServiceBaseUrl: http://pv217_user:8081
    depends_on:
      - postgres

  homework:
    container_name: pv217_homework
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: homework-service
    ports:
      - "8083:8083"
    environment:
      quarkus.datasource.jdbc.url: jdbc:postgresql://postgres:5432/d
      kafka.bootstrap.servers: kafka:9092
      pv217.userServiceBaseUrl: http://pv217_user:8081
      pv217.courseServiceBaseUrl: http://pv217_course:8082
    depends_on:
      - postgres
      - kafka

  email:
    container_name: pv217_email
    build:
      dockerfile: src/main/docker/Dockerfile.jvm
      context: email-service
    ports:
      - "8089:8089"
    environment:
      kafka.bootstrap.servers: kafka:9092
    depends_on:
      - postgres
      - kafka

  plagiarism:
    container_name: pv217_plagiarism
    build:
      context: plagiarism-service
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      - postgres
      - kafka

  postgres:
    container_name: postgres
    image: registry.fedoraproject.org/f33/postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USER: u
      POSTGRESQL_PASSWORD: p
      POSTGRESQL_DATABASE: d

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=PLAINTEXT://0.0.0.0:9092 --override advertised.listeners=PLAINTEXT://kafka:9092 --override zookeeper.connect=zookeeper:2181"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"

  grafana:
    image: grafana/grafana:6.4.4
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
